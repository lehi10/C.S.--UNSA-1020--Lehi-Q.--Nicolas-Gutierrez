#include <iostream>
#include <cstdlib>
#include <string>

using namespace std;

class arbolB
#include <iostream>
#include <cstdlib>
#include <string>
#include <map>

typedef float evaluacion;
using namespace std;

class arbolB
{
private:
       string m_cabeza;
       arbolB* m_Hr;
       arbolB *m_Hl;
public:       
              arbolB(){m_cabeza =" ";m_Hr=0;m_Hl=0;}
       arbolB(string cabeza){m_cabeza =cabeza;m_Hr=0;m_Hl=0;}
       ~arbolB(){delete(m_Hr);delete(m_Hl);}
       bool tiene_hijo(){if(m_Hr!=0||m_Hl!=0)return true;return false;};    
       void setHr(arbolB * pHr){m_Hr=pHr;}    
       void setLr(arbolB * pLr){m_Hr=pLr;}   
       void setHead(string head){m_cabeza=head;}
       void insertar(string nodo){}
       void evaluar();
       
};
 float resta(float a,float b)
{
       return (a - b);      
}
float suma(float a,float b)
{
       return (a + b);      
}
 map<string , float(*)(float  ,float )> funciones; 

int  main ()
{
     float(*fs)(float  ,float );
 funciones["+"]=&::suma; 
   funciones["-"]=&::resta; 
       

 arbolB a;
 string op;
 cin>>op;
 fs=funciones[op];
 cout<<fs;
 int c;
 cin>>c;    
 return 0;
}

